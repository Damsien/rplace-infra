apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sentinel
  namespace: rplace
spec:
  serviceName: sentinel
  replicas: 3
  selector:
    matchLabels:
      app: sentinel
  template:
    metadata:
      labels:
        app: sentinel
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - sentinel
            topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: config
        image: redis:6.2.3-alpine
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: redis-password
        command: [ "sh", "-c" ]
        args:
          - |
            nodes=redis-0.redis,redis-1.redis,redis-2.redis

            MASTER=
            while [ "$MASTER" == "" ];
            do
                for i in ${nodes//,/ }
                do
                    echo "finding master at $i"
                    MASTER=$(redis-cli --no-auth-warning --raw -h $i -a $REDIS_PASSWORD info replication | awk '{print $1}' | grep master_host: | cut -d ":" -f2)
                    if [ "$MASTER" == "" ]; then
                        echo "no master found"
                        MASTER=
                    else
                        echo "found $MASTER"
                        break
                    fi
                done
            done

            echo "sentinel monitor mymaster $MASTER 6379 2" >> /tmp/master
            echo "port 5000
            sentinel resolve-hostnames yes
            sentinel announce-hostnames yes
            $(cat /tmp/master)
            sentinel down-after-milliseconds mymaster 5000
            sentinel failover-timeout mymaster 60000
            sentinel parallel-syncs mymaster 1
            sentinel auth-pass mymaster $REDIS_PASSWORD
            " > /etc/redis/sentinel.conf

            # Set password in the config file
            sed -i "s/VERY_SECRET_PASSWORD/$REDIS_PASSWORD/" /etc/redis/sentinel.conf
            cat /etc/redis/sentinel.conf
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis/
      containers:
      - name: sentinel
        image: redis/redis-stack-server:latest
        command: ["redis-sentinel"]
        args: ["/etc/redis/sentinel.conf"]
        ports:
        - containerPort: 5000
          name: sentinel
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis/
        - name: data
          mountPath: /data
      volumes:
      - name: redis-config
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadOnlyMany" ]
      storageClassName: "nfs"
      resources:
        requests:
          storage: 50Mi