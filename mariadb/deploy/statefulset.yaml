apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb-sts
  namespace: rplace
spec:
  serviceName: "mariadb"
  replicas: 2
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      # topologySpreadConstraints:
      #   - maxSkew: 1
      #     topologyKey: kubernetes.io/hostname
      #     whenUnsatisfiable: DoNotSchedule
      #     labelSelector:
      #       matchLabels:
      #         app: mariadb
      initContainers:
      - name: init-mariadb
        image: mariadb
        imagePullPolicy: Always
        command:
        - bash
        - "-c"
        - |
          set -ex
          # Copy config map to directory that already exists (but must be used as a volume for main container)
          ls /mnt/config-map
          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          echo "$(hostname)"
          echo "$(ordinal)"
          # Copy appropriate conf.d files from config-map to emptyDir.
          if [[ $ordinal -eq 0 ]]; then
            cp /mnt/config-map/primary.cnf /etc/mysql/conf.d/server-id.cnf
            # Create the users needed for replication on primary
            cp /mnt/config-map/primary.sql /docker-entrypoint-initdb.d
          else
            cp /mnt/config-map/replica.cnf /etc/mysql/conf.d/server-id.cnf
            # We cannot know the IP of the host, it will be created
            # cp /mnt/config-map/secondary.sql docker-entrypoint-initdb.d/
          fi
          # Add an offset to avoid reserved server-id=0 value.
          echo server-id=$((3000 + $ordinal)) >> /etc/mysql/conf.d/server-id.cnf
          cp /mnt/config-map/mariadb.cnf /etc/mysql/conf.d
          # Execute the script if needed (maybe for galera)
          # ./mnt/config-map/init.sh
          ls /etc/mysql/conf.d/
          cat /etc/mysql/conf.d/server-id.cnf
        env:
        # Using Secrets
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mariadb-secret
              key: mariadb-root-password
        volumeMounts:
          - name: mariadb-config
            mountPath: /mnt/config-map
          - name: confdir
            mountPath: /etc/mysql/conf.d # directory will be cleaned at the beginning
      restartPolicy: Always
      containers:
      - name: mariadb
        image: mariadb
        ports:
        - containerPort: 3306
          name: mariadb
        env:
        # Using Secrets
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mariadb-secret
              key: mariadb-root-password
        - name: MYSQL_INITDB_SKIP_TZINFO
          value: "yes"
        # Mount volumes from persistent volume claim
        volumeMounts:
        - name: mariadb-config
          mountPath: /mnt/config-map
        - name: datadir
          mountPath: /var/lib/mysql/
        - name: confdir
          mountPath: /etc/mysql/conf.d # directory will be cleaned at the beginning
      volumes:
      - name: mariadb-config
        configMap:
          name: mariadb-configmap
          defaultMode: 0544
      - name: confdir
        emptyDir: {}

  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "local-ssd"
      resources:
        requests:
          storage: 300M